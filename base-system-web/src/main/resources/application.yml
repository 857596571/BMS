spring:
  application:
    name: base-quartz-web
  profiles:
    active: @profileActive@

mybatis-plus:
  mapper-locations: classpath:mappings/**/*.xml
  configuration:
    #是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射
    mapUnderscoreToCamelCase: true
    #指定当结果集中值为 null 的时候是否调用映射对象的 Setter（Map 对象时为 put）方法，通常运用于有 Map.keySet() 依赖或 null 值初始化的情况
    callSettersOnNulls: true
    #使全局的映射器启用或禁用缓存。
    cacheEnabled: true
    #全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。
    lazyLoadingEnabled: true
    #当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。
    aggressiveLazyLoading: true
    #是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true
    multipleResultSetsEnabled: true
    #是否可以使用列的别名 (取决于驱动的兼容性) default:true
    useColumnLabel: true
    #允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false
    useGeneratedKeys: false
    #指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
    autoMappingBehavior: PARTIAL
    #这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）
    defaultExecutorType: SIMPLE
    #设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) default:session
    localCacheScope: SESSION
    #设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型
    jdbcTypeForNull: NULL
    #DB 策略配置
    db-config:
      #数据库类型,默认值为未知的数据库类型 如果值为OTHER,启动时会根据数据库连接 url 获取数据库类型;如果不是OTHER则不会自动获取数据库类型
      db-type: mysql