<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.modules.system.mapper.SysUserMapper">

    <!-- 通用sql -->
    <sql id="selectColumns">
        SELECT
            a.id,
            a.org_id,
            d.name orgName,
            a.login_name,
            a.password,
            a.name,
            a.type,
            a.email,
            a.phone,
            a.mobile,
            a.state,
            a.remarks,
            a.create_date,
            a.update_date
        FROM sys_user a
        left join sys_org d on d.id = a.org_id
    </sql>

    <!-- 根据编号获得用户 -->
    <select id="get" resultType="com.modules.system.entity.SysUser">
        <include refid="selectColumns"/>
        WHERE a.id = #{id}
    </select>

    <!-- 根据登录名查询用户 -->
    <select id="getByLoginName" resultType="com.modules.system.entity.SysUser">
        <include refid="selectColumns"/>
        WHERE a.login_name = #{loginName}
        and a.del_flag = '0'
    </select>

    <!-- 查询用户列表 -->
    <select id="findList" resultType="com.modules.system.entity.SysUser">
        SELECT
        a.id,
        a.org_id,
        d.name orgName,
        a.login_name,
        a.password,
        a.name,
        a.type,
        a.email,
        a.phone,
        a.mobile,
        a.state,
        a.remarks,
        a.create_date,
        a.update_date,
        (select GROUP_CONCAT(r.role_id) from sys_user_role r where r.user_id = a.id) roleIds
        FROM sys_user a
        left join sys_org d on d.id = a.org_id
        WHERE a.del_flag = '0' and a.id != 1
        <if test="searchKeys != null and searchKeys != ''">
            AND (a.login_name like CONCAT('%', #{searchKeys}, '%') or a.name like CONCAT('%', #{searchKeys}, '%') )
        </if>
        <if test="state != null and state != ''">
            AND a.state = #{state}
        </if>
        <if test="type != null and type != ''">
            AND a.type = #{type}
        </if>
        <if test="orgId != null and orgId != ''">
            AND a.org_id = #{orgId}
        </if>
        <if test="id != null and id != ''">
            AND a.id in (${id})
        </if>
        <if test="roleId != null and roleId != ''">
            and a.id not in(select ur.user_id from sys_user_role ur where ur.role_id = #{roleId})
        </if>
        ORDER BY a.create_date
    </select>

    <!-- 获取指定角色的用户列表 -->
    <select id="getUsersByRoleId" resultType="com.modules.system.entity.SysUser">
        select u.*, d.name orgName from sys_user u, sys_user_role ur, sys_org d
        where u.del_flag = '0'
        and u.id = ur.user_id
        and d.id = u.org_id
        and ur.role_id = #{roleId}
    </select>

    <!-- 判断登录账号是否唯一 -->
    <select id="isExists" resultType="int">
        select count(1) from sys_user u where u.del_flag = '0' and u.login_name = #{loginName}
        <if test="id != null and id != ''">
            and u.id != #{id}
        </if>
    </select>

    <!-- 插入用户 -->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO sys_user (
            id,
            org_id,
            login_name,
            password,
            name,
            type,
            email,
            phone,
            mobile,
            state,
            create_date,
            update_date,
            remarks
        ) VALUES (
            #{id},
            #{orgId},
            #{loginName},
            #{password},
            #{name},
            #{type},
            #{email},
            #{phone},
            #{mobile},
            #{state},
            #{createDate},
            #{updateDate},
            #{remarks}
        )
    </insert>

    <!-- 更新用户 -->
    <update id="update">
        UPDATE sys_user
        <set>
            <if test="loginName != null and loginName != '' ">login_name = #{loginName},</if>
            <if test="orgId != null and orgId != '' ">org_id = #{orgId},</if>
            <if test="name != null and name != '' ">name = #{name},</if>
            <if test="email != null and email != '' ">email = #{email},</if>
            <if test="phone != null and phone != '' ">phone = #{phone},</if>
            <if test="mobile != null and mobile != '' ">mobile = #{mobile},</if>
            <if test="state != null and state != '' ">state = #{state},</if>
            <if test="updateDate != null">update_date = #{updateDate},</if>
            remarks = #{remarks}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新用户状态 -->
    <update id="updateUserStates">
        update sys_user set state = #{state} where id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePasswordById">
        UPDATE sys_user
        SET password = #{password},
        last_password_reset_date = #{lastPasswordResetDate}
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <update id="deleteById">
        UPDATE sys_user
        SET del_flag = '1', login_name = concat(login_name, '_del')
        WHERE id = #{id}
    </update>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
        DELETE FROM sys_user_role
        WHERE user_id = #{id}
    </delete>

    <!-- 插入用户和角色关联表数据 -->
    <insert id="insertUserRole">
        INSERT INTO sys_user_role(user_id, role_id)
        <foreach collection="roles" item="role" separator=" union all ">
            SELECT #{id}, #{role.id} FROM dual
        </foreach>
    </insert>

</mapper>